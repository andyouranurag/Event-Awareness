{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\OneDrive\\\\Documents\\\\sem5\\\\Website\\\\mern\\\\my-app\\\\src\\\\components\\\\CalendarSidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarSidebar = ({\n  onDateSelect\n}) => {\n  _s();\n  const calendarRef = useRef(null);\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  useEffect(() => {\n    // Fetch events from the API\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/events');\n        const data = await response.json();\n        setEvents(data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  // Handles going to today and showing today's events\n  const handleToday = () => {\n    var _calendarRef$current;\n    let calendarApi = (_calendarRef$current = calendarRef.current) === null || _calendarRef$current === void 0 ? void 0 : _calendarRef$current.getApi();\n    if (calendarApi) {\n      calendarApi.today();\n      const today = new Date().toISOString().split('T')[0];\n      setSelectedDate(today);\n      onDateSelect(today); // Trigger event details update for today\n    }\n  };\n\n  // Handles manual date selection\n  const handleDateChange = e => {\n    const selected = e.target.value;\n    setSelectedDate(selected);\n    onDateSelect(selected);\n  };\n\n  // Handles clicking a date on the calendar\n  const handleDateClick = info => {\n    const clickedDate = info.dateStr;\n    setSelectedDate(clickedDate);\n    onDateSelect(clickedDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"\\uD835\\uDC6A\\uD835\\uDF1F\\uD835\\uDC73\\uD835\\uDF2E\\uD835\\uDF2B\\uD835\\uDC6B\\uD835\\uDF1F\\uD835\\uDF1E\", /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-controls mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control mt-2\",\n        value: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events // Now using fetched events\n      ,\n      dateClick: handleDateClick,\n      headerToolbar: {\n        left: 'prev,next',\n        center: 'title',\n        right: ''\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarSidebar, \"iSFvnqwQPQCHcQ6H5nZFvzfx5t4=\");\n_c = CalendarSidebar;\nexport default CalendarSidebar;\nvar _c;\n$RefreshReg$(_c, \"CalendarSidebar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FullCalendar","dayGridPlugin","interactionPlugin","Spinner","jsxDEV","_jsxDEV","CalendarSidebar","onDateSelect","_s","calendarRef","events","setEvents","selectedDate","setSelectedDate","Date","toISOString","split","fetchEvents","response","fetch","data","json","error","console","handleToday","_calendarRef$current","calendarApi","current","getApi","today","handleDateChange","e","selected","target","value","handleDateClick","info","clickedDate","dateStr","children","animation","size","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","onChange","ref","plugins","initialView","dateClick","headerToolbar","left","center","right","_c","$RefreshReg$"],"sources":["C:/Users/anura/OneDrive/Documents/sem5/Website/mern/my-app/src/components/CalendarSidebar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst CalendarSidebar = ({ onDateSelect }) => {\r\n    const calendarRef = useRef(null);\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n    useEffect(() => {\r\n        // Fetch events from the API\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/events');\r\n                const data = await response.json();\r\n                setEvents(data);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    // Handles going to today and showing today's events\r\n    const handleToday = () => {\r\n        let calendarApi = calendarRef.current?.getApi();\r\n        if (calendarApi) {\r\n            calendarApi.today();\r\n            const today = new Date().toISOString().split('T')[0];\r\n            setSelectedDate(today);\r\n            onDateSelect(today);  // Trigger event details update for today\r\n        }\r\n    };\r\n\r\n    // Handles manual date selection\r\n    const handleDateChange = (e) => {\r\n        const selected = e.target.value;\r\n        setSelectedDate(selected);\r\n        onDateSelect(selected);\r\n    };\r\n\r\n    // Handles clicking a date on the calendar\r\n    const handleDateClick = (info) => {\r\n        const clickedDate = info.dateStr;\r\n        setSelectedDate(clickedDate);\r\n        onDateSelect(clickedDate);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4>ùë™ùúüùë≥ùúÆùú´ùë´ùúüùúû<Spinner animation=\"border\" size=\"sm\" />\r\n      <Spinner animation=\"border\" />\r\n      <Spinner animation=\"grow\" size=\"sm\" />\r\n      <Spinner animation=\"grow\" /></h4>\r\n            <div className=\"calendar-controls mb-3\">\r\n                {/* Today button */}\r\n                <button className=\"btn btn-secondary\" onClick={handleToday}>Today</button>\r\n                \r\n                {/* Manual date input field */}\r\n                <input type=\"date\" className=\"form-control mt-2\" value={selectedDate} onChange={handleDateChange} />\r\n            </div>\r\n            \r\n            {/* FullCalendar instance */}\r\n            <FullCalendar\r\n                ref={calendarRef}\r\n                plugins={[dayGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                events={events}  // Now using fetched events\r\n                dateClick={handleDateClick}\r\n                headerToolbar={{\r\n                    left: 'prev,next', \r\n                    center: 'title',\r\n                    right: ''\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}