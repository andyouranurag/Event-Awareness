{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\OneDrive\\\\Documents\\\\sem5\\\\Website\\\\mern\\\\my-app\\\\src\\\\components\\\\CalendarSidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // Required for dateClick\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarSidebar = ({\n  events\n}) => {\n  _s();\n  const calendarRef = useRef(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [filteredEvents, setFilteredEvents] = useState([]);\n\n  // Handle 'Today' button click\n  const handleToday = () => {\n    var _calendarRef$current;\n    let calendarApi = (_calendarRef$current = calendarRef.current) === null || _calendarRef$current === void 0 ? void 0 : _calendarRef$current.getApi();\n    if (calendarApi) {\n      calendarApi.today();\n    }\n  };\n\n  // Handle date change from input field\n  const handleDateChange = e => {\n    var _calendarRef$current2;\n    let calendarApi = (_calendarRef$current2 = calendarRef.current) === null || _calendarRef$current2 === void 0 ? void 0 : _calendarRef$current2.getApi();\n    if (calendarApi) {\n      calendarApi.gotoDate(e.target.value);\n    }\n  };\n\n  // Handle date click from calendar\n  const handleDateClick = info => {\n    const clickedDate = info.dateStr; // The clicked date in \"YYYY-MM-DD\" format\n    setSelectedDate(clickedDate);\n\n    // Filter events for the clicked date (assuming events have a 'start' date field in 'YYYY-MM-DD' format)\n    const matchingEvents = events.filter(event => {\n      const eventDate = event.start.split('T')[0]; // Extract only the date part if it's in 'YYYY-MM-DDTHH:MM:SS' format\n      return eventDate === clickedDate;\n    });\n    setFilteredEvents(matchingEvents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-controls mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, interactionPlugin] // Added interactionPlugin for dateClick to work\n      ,\n      initialView: \"dayGridMonth\",\n      events: events,\n      dateClick: handleDateClick // Attach the dateClick event handler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-details mt-4\",\n      children: selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Events on \", selectedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), filteredEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: filteredEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 41\n            }, this), \" - \", event.start]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events on this day.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarSidebar, \"lp/j/Pr2RDGAYwC+OO9MkUIwVFU=\");\n_c = CalendarSidebar;\nexport default CalendarSidebar;\nvar _c;\n$RefreshReg$(_c, \"CalendarSidebar\");","map":{"version":3,"names":["React","useState","useRef","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarSidebar","events","_s","calendarRef","selectedDate","setSelectedDate","filteredEvents","setFilteredEvents","handleToday","_calendarRef$current","calendarApi","current","getApi","today","handleDateChange","e","_calendarRef$current2","gotoDate","target","value","handleDateClick","info","clickedDate","dateStr","matchingEvents","filter","event","eventDate","start","split","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","onChange","ref","plugins","initialView","dateClick","length","map","index","title","_c","$RefreshReg$"],"sources":["C:/Users/anura/OneDrive/Documents/sem5/Website/mern/my-app/src/components/CalendarSidebar.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction'; // Required for dateClick\r\n\r\nconst CalendarSidebar = ({ events }) => {\r\n    const calendarRef = useRef(null);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [filteredEvents, setFilteredEvents] = useState([]);\r\n\r\n    // Handle 'Today' button click\r\n    const handleToday = () => {\r\n        let calendarApi = calendarRef.current?.getApi();\r\n        if (calendarApi) {\r\n            calendarApi.today();\r\n        }\r\n    };\r\n\r\n    // Handle date change from input field\r\n    const handleDateChange = (e) => {\r\n        let calendarApi = calendarRef.current?.getApi();\r\n        if (calendarApi) {\r\n            calendarApi.gotoDate(e.target.value);\r\n        }\r\n    };\r\n\r\n    // Handle date click from calendar\r\n    const handleDateClick = (info) => {\r\n        const clickedDate = info.dateStr; // The clicked date in \"YYYY-MM-DD\" format\r\n        setSelectedDate(clickedDate);\r\n\r\n        // Filter events for the clicked date (assuming events have a 'start' date field in 'YYYY-MM-DD' format)\r\n        const matchingEvents = events.filter(event => {\r\n            const eventDate = event.start.split('T')[0]; // Extract only the date part if it's in 'YYYY-MM-DDTHH:MM:SS' format\r\n            return eventDate === clickedDate;\r\n        });\r\n        setFilteredEvents(matchingEvents);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4>Calendar</h4>\r\n            <div className=\"calendar-controls mb-3\">\r\n                <button className=\"btn btn-secondary\" onClick={handleToday}>Today</button>\r\n                <input type=\"date\" className=\"form-control\" onChange={handleDateChange} />\r\n            </div>\r\n            <FullCalendar\r\n                ref={calendarRef}\r\n                plugins={[dayGridPlugin, interactionPlugin]} // Added interactionPlugin for dateClick to work\r\n                initialView=\"dayGridMonth\"\r\n                events={events}\r\n                dateClick={handleDateClick} // Attach the dateClick event handler\r\n            />\r\n\r\n            {/* Event Details Section */}\r\n            <div className=\"event-details mt-4\">\r\n                {selectedDate && (\r\n                    <>\r\n                        <h5>Events on {selectedDate}</h5>\r\n                        {filteredEvents.length > 0 ? (\r\n                            <ul>\r\n                                {filteredEvents.map((event, index) => (\r\n                                    <li key={index}>\r\n                                        <strong>{event.title}</strong> - {event.start}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>No events on this day.</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}