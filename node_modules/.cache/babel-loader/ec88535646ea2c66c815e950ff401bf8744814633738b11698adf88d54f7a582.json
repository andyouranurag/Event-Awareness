{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\OneDrive\\\\Documents\\\\sem5\\\\Website\\\\mern\\\\my-app\\\\src\\\\components\\\\CalendarSidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarSidebar = ({\n  events,\n  onDateSelect\n}) => {\n  _s();\n  const calendarRef = useRef(null);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  // Handles going to today and showing today's events\n  const handleToday = () => {\n    var _calendarRef$current;\n    let calendarApi = (_calendarRef$current = calendarRef.current) === null || _calendarRef$current === void 0 ? void 0 : _calendarRef$current.getApi();\n    if (calendarApi) {\n      calendarApi.today();\n      const today = new Date().toISOString().split('T')[0];\n      setSelectedDate(today);\n      onDateSelect(today); // Trigger event details update for today\n    }\n  };\n\n  // Handles manual date selection\n  const handleDateChange = e => {\n    const selected = e.target.value;\n    setSelectedDate(selected);\n    onDateSelect(selected);\n  };\n\n  // Handles clicking a date on the calendar\n  const handleDateClick = info => {\n    const clickedDate = info.dateStr;\n    setSelectedDate(clickedDate);\n    onDateSelect(clickedDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-controls mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control mt-2\",\n        value: selectedDate,\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      ref: calendarRef,\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      dateClick: handleDateClick,\n      headerToolbar: {\n        left: 'prev,next',\n        // Removes 'today' and 'month' button, only prev/next remain\n        center: 'title',\n        right: '' // Removes any view options on the right (e.g., month/week/day buttons)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarSidebar, \"H90Y8mNcXdZhmrILLZ7tbcrT7Ws=\");\n_c = CalendarSidebar;\nexport default CalendarSidebar;\nvar _c;\n$RefreshReg$(_c, \"CalendarSidebar\");","map":{"version":3,"names":["React","useState","useRef","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CalendarSidebar","events","onDateSelect","_s","calendarRef","selectedDate","setSelectedDate","Date","toISOString","split","handleToday","_calendarRef$current","calendarApi","current","getApi","today","handleDateChange","e","selected","target","value","handleDateClick","info","clickedDate","dateStr","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","onChange","ref","plugins","initialView","dateClick","headerToolbar","left","center","right","_c","$RefreshReg$"],"sources":["C:/Users/anura/OneDrive/Documents/sem5/Website/mern/my-app/src/components/CalendarSidebar.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nconst CalendarSidebar = ({ events, onDateSelect }) => {\r\n    const calendarRef = useRef(null);\r\n    const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\r\n\r\n    // Handles going to today and showing today's events\r\n    const handleToday = () => {\r\n        let calendarApi = calendarRef.current?.getApi();\r\n        if (calendarApi) {\r\n            calendarApi.today();\r\n            const today = new Date().toISOString().split('T')[0];\r\n            setSelectedDate(today);\r\n            onDateSelect(today);  // Trigger event details update for today\r\n        }\r\n    };\r\n\r\n    // Handles manual date selection\r\n    const handleDateChange = (e) => {\r\n        const selected = e.target.value;\r\n        setSelectedDate(selected);\r\n        onDateSelect(selected);\r\n    };\r\n\r\n    // Handles clicking a date on the calendar\r\n    const handleDateClick = (info) => {\r\n        const clickedDate = info.dateStr;\r\n        setSelectedDate(clickedDate);\r\n        onDateSelect(clickedDate);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4>Calendar</h4>\r\n            <div className=\"calendar-controls mb-3\">\r\n                {/* Today button, now the only one */}\r\n                <button className=\"btn btn-secondary\" onClick={handleToday}>Today</button>\r\n                \r\n                {/* Manual date input field */}\r\n                <input type=\"date\" className=\"form-control mt-2\" value={selectedDate} onChange={handleDateChange} />\r\n            </div>\r\n            \r\n            {/* FullCalendar instance */}\r\n            <FullCalendar\r\n                ref={calendarRef}\r\n                plugins={[dayGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                events={events}\r\n                dateClick={handleDateClick}\r\n                headerToolbar={{\r\n                    left: 'prev,next', // Removes 'today' and 'month' button, only prev/next remain\r\n                    center: 'title',\r\n                    right: ''  // Removes any view options on the right (e.g., month/week/day buttons)\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarSidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}